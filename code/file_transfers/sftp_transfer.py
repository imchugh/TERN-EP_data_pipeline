#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Nov 25 10:58:21 2024

@author: imchugh
"""

###############################################################################
### BEGIN IMPORTS ###
###############################################################################

#------------------------------------------------------------------------------
### STANDARD IMPORTS ###
import logging
import subprocess as spc
#------------------------------------------------------------------------------

#------------------------------------------------------------------------------
### CUSTOM IMPORTS ###
from paths import paths_manager as pm
#------------------------------------------------------------------------------

###############################################################################
### END IMPORTS ###
###############################################################################



###############################################################################
### BEGIN INITS ###
###############################################################################

csiro_aliases = {'AliceSpringsMulga': 'AliceMulga'}
logger = logging.getLogger(__name__)

###############################################################################
### END INITS ###
###############################################################################



###############################################################################
### BEGIN FUNCTIONS ###
###############################################################################

#------------------------------------------------------------------------------
def send_cosmoz(site):
    
    file_path = pm.get_local_stream_path(
        resource='shell_scripts', stream='push_cosmoz'
        )
    
    try:
        remote_alias = csiro_aliases[site]
    except KeyError:
        remote_alias = site
    
    # Do the transfer
    logger.info('Copying now...')
    run_list =  [file_path, site, remote_alias]
    try:
        rslt = _run_subprocess(run_list=run_list)
        logger.info(rslt.stdout.decode())
    except (spc.TimeoutExpired, spc.CalledProcessError) as e:
        logger.error(e)
        logger.error('Copy failed!')
        raise
    logger.info('Copy succeeded')
#------------------------------------------------------------------------------

#------------------------------------------------------------------------------
def _run_subprocess(run_list, timeout=120):

    return spc.run(
        run_list, capture_output=True, timeout=timeout, check=True
        )
#------------------------------------------------------------------------------

###############################################################################
### END FUNCTIONS ###
###############################################################################
